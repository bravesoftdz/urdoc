unit UAbout;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  StdCtrls, Buttons, ExtCtrls, {jpeg,} Marquee, shEllapi;

type
  TEMailLabel=class(StdCtrls.TLabel)
  public
    procedure CMMouseLeave(var Message: TMessage); message CM_MOUSELEAVE;
    procedure CMMouseEnter(var Message: TMessage); message CM_MOUSEENTER;
  end;

  TfmAbout = class(TForm)
    pnBottom: TPanel;
    btOk: TBitBtn;
    pnRule: TPanel;
    lbTel: TLabel;
    lbCorp: TLabel;
    lbVer: TLabel;
    lbMain: TLabel;
    Bevel1: TBevel;
    lbMemAll: TLabel;
    lbMemUse: TLabel;
    Bevel2: TBevel;
    imEXE: TImage;
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure lbMailClick(Sender: TObject);
    procedure imEXEClick(Sender: TObject);
  private
    ScrllText: TddgMarquee;
  public
    procedure ActiveScrollText(Text: String);
  end;

var
  fmAbout: TfmAbout;

implementation

uses UDm, UMain, SeoDbConsts;

{$R *.DFM}

{ TEmailLabel }

procedure TEMailLabel.CMMouseLeave(var Message: TMessage);
begin
  inherited;
  Cursor:=crDefault;
  Font.Color:=clWindowText;
  Font.Style:=[];
end;

procedure TEMailLabel.CMMouseEnter(var Message: TMessage);
begin
  Font.Color:=clBlue;
  Font.Style:=[fsUnderline];
  Cursor:=crHandPoint;
  inherited;
end;

{ TfmAbout }

procedure TfmAbout.FormCreate(Sender: TObject);
var
  T: TmemoryStatus;
  dMem: LongWord;
  Percent: Extended;
  scrltxt: string;
  lpIcon: Word;
  Buffer: string;
begin

  OnKeyDown:=fmMain.OnKeyDown;
  OnKeyPress:=fmMain.OnKeyPress;
  OnKeyUp:=fmMain.OnKeyUp;

  ScrllText:=TddgMarquee.Create(nil);
  ScrllText.Justify:=tjLeft;
  ScrllText.Circle:=true;
  ScrllText.parent:=pnRule;
  ScrllText.Align:=alClient;
  ScrllText.Font.Assign(pnRule.Font);
  ScrllText.TimerInterval:=100;
  ScrllText.ParentColor:=true;
  ScrllText.ParentFont:=true;
  ScrllText.StopOnLine:=true;

  GlobalMemoryStatus(T);
  lbMemAll.Caption:=lbMemAll.Caption+' '+inttostr(round(T.dwTotalPhys/(1024)))+' KB';
  dMem:=T.dwTotalPhys-T.dwAvailPhys;
  Percent:=(dMem/T.dwTotalPhys)*100;
  lbMemUse.Caption:=lbMemUse.Caption+' '+FormatFloat('0',Percent)+' %';

  lbVer.Caption:=GetVersion;

  Buffer:='';
  if LocalDb.ReadParam(SDb_ParamProgramm,Buffer) then
    lbMain.Caption:=Format(SMainCaption,[Buffer]);
    
  pnRule.Visible:=false;
  ImExe.Picture.Icon.Handle:=ExtractAssociatedIcon(Hinstance,Pchar(Application.ExeName),lpIcon);

  Buffer:='';
  if LocalDb.ReadParam(SDb_ParamPhonesAndSite,Buffer) then
    lbTel.Caption:=Buffer;

  Buffer:='';
  if LocalDb.ReadParam(SDb_ParamAbout,Buffer) then
    scrltxt:=Format(Buffer,[GetNotariusList(true)]);

  ActiveScrollText(scrltxt);

  Buffer:='';
  if LocalDb.ReadParam(SDb_ParamCompany,Buffer) then
    lbCorp.Caption:=Format(SCompanyName,[Buffer]);
end;

procedure TfmAbout.FormDestroy(Sender: TObject);
begin
  ScrllText.Free;
end;

procedure TfmAbout.imEXEClick(Sender: TObject);
var
  S: String;
begin
  if InputQuery('test','string',S) then begin
    ShowMessage();
  end;
end;

procedure TfmAbout.ActiveScrollText(Text: String);
begin
  ScrllText.Active:=false;
  ScrllText.Items.Clear;
  ScrllText.Items.text:=Text;
  ScrllText.Active:=true;
  pnRule.Visible:=true;
end;

procedure TfmAbout.lbMailClick(Sender: TObject);
begin
//  ShellExecute(Handle,'open',);
end;

end.
