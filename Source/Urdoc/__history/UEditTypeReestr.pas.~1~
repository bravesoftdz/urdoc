unit UEditTypeReestr;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  StdCtrls, Buttons, ExtCtrls, db;

type
  TfmEditTypeReestr = class(TForm)
    lbName: TLabel;
    edName: TEdit;
    Panel1: TPanel;
    Panel2: TPanel;
    btOk: TBitBtn;
    btCancel: TBitBtn;
    cbInString: TCheckBox;
    lbHint: TLabel;
    meHint: TMemo;
    lbNot: TLabel;
    edNot: TEdit;
    bibNot: TBitBtn;
    lbPrefix: TLabel;
    edPrefix: TEdit;
    lbSufix: TLabel;
    edSufix: TEdit;
    lbSortNum: TLabel;
    edSortNum: TEdit;
    procedure edNameChange(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure chbAdminClick(Sender: TObject);
    procedure meHintChange(Sender: TObject);
    procedure edNameKeyPress(Sender: TObject; var Key: Char);
    procedure bibNotClick(Sender: TObject);
    procedure edNotChange(Sender: TObject);
  private
    { Private declarations }
  public
    NotID: Integer;
    ChangeFlag: Boolean;
    procedure OkClick(Sender: TObject);
    procedure FilterClick(Sender: TObject);
  end;

var
  fmEditTypeReestr: TfmEditTypeReestr;

implementation

uses Udm, UMain, URBNotarius;

{$R *.DFM}

procedure TfmEditTypeReestr.OkClick(Sender: TObject);
begin
  if Trim(edname.Text)='' then begin
    ShowError(Handle,'Поле <'+lbName.Caption+'>'+#13+'не может быть пустым.');
    edname.SetFocus;
    exit;
  end;
  if Trim(edNot.Text)='' then begin
    ShowError(Handle,'Поле <'+lbNot.Caption+'>'+#13+'не может быть пустым.');
    bibNot.SetFocus;
    exit;
  end;

  ModalResult:=mrOk;
end;

procedure TfmEditTypeReestr.edNameChange(Sender: TObject);
begin
  ChangeFlag:=true;
end;

procedure TfmEditTypeReestr.FilterClick(Sender: TObject);
begin
  ModalResult:=mrOk;
end;

procedure TfmEditTypeReestr.FormCreate(Sender: TObject);
begin
  OnKeyDown:=fmMain.OnKeyDown;
  OnKeyPress:=fmMain.OnKeyPress;
  OnKeyUp:=fmMain.OnKeyUp;
end;

procedure TfmEditTypeReestr.chbAdminClick(Sender: TObject);
begin
  ChangeFlag:=true;
end;

procedure TfmEditTypeReestr.meHintChange(Sender: TObject);
begin
  ChangeFlag:=true;
end;

procedure TfmEditTypeReestr.edNameKeyPress(Sender: TObject; var Key: Char);
begin
  if Key='''' then Key:=#0;
end;

procedure TfmEditTypeReestr.bibNotClick(Sender: TObject);
var
  fm: TfmNotarius;
begin
  fm:=TfmNotarius.Create(nil);
  try
   fm.BorderIcons:=[biSystemMenu, biMaximize];
   fm.bibOk.Visible:=true;
   fm.bibOk.OnClick:=fm.MR;
   fm.pnSQL.Visible:=false;
   fm.Grid.OnDblClick:=fm.MR;
   fm.LoadFilter;
   fm.ActiveQuery;
   if trim(edNot.Text)<>'' then
    fm.Mainqr.locate('fio',trim(edNot.Text),[loPartialKey,loCaseInsensitive]);
   if fm.ShowModal=mrOk then begin
     ChangeFlag:=true;
     edNot.Text:=Trim(fm.Mainqr.fieldByName('fio').AsString);
     Self.NotID:=fm.Mainqr.fieldByName('not_id').AsInteger;
   end;
  finally
   fm.Free;
  end;
end;

procedure TfmEditTypeReestr.edNotChange(Sender: TObject);
begin
  ChangeFlag:=true;
end;

end.
